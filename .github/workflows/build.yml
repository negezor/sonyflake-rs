name: Build

on:
  push:
    branches:
      - main
    tags:
      - "v*"
  pull_request:
    branches:
      - main

jobs:
  rust_fmt_check:
    name: Rustfmt check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Install rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt
      - name: Run cargo fmt
        run: cargo fmt -- --check
  clippy_check:
    name: Clippy check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Install clippy
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy
      - name: Run clippy check
        run: cargo clippy --all-features

  test:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Install rust
        uses: dtolnay/rust-toolchain@stable
      - name: Run cargo test
        run: cargo test
  publish_on_crates_io:
    name: Publish on crates.io
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags') # Only on tags
    needs:
      - rust_fmt_check
      - clippy_check
      - test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install rust
        uses: dtolnay/rust-toolchain@stable
      - name: Run cargo publish
        run: cargo publish --token ${{ secrets.CRATES_IO_TOKEN }}
